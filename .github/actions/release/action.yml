name: 'Create release'
description: 'Create release'
inputs:
  access_token:
    description: 'Access token.'
    required: true
  release_repository:
    description: 'Define release repository.'
    required: true

runs:
  using: "composite"
  steps:
    - id: createRelease
      run: |
        curl -v -L -X POST \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ inputs.access_token }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        "https://api.github.com/repos/${{ inputs.release_repository }}/releases" \
        -d '{"tag_name": "${{ github.ref_name }}","target_commitish": "${{ github.sha }}","name": "${{ github.ref_name }}","body": "Github Access Token ${{ github.ref_name }}","draft": false,"prerelease": false,"generate_release_notes": false}' | jq > request_response.json
        UPLOAD_URL=$(cat request_response.json | jq .upload_url | tr -d '"') && export GH_RELEASE_UPLOAD_URL=${UPLOAD_URL%%{*}
        HTML_URL=$(cat request_response.json | jq .html_url | tr -d '"') && export GH_RELEASE_HTML_URL=${HTML_URL}
        export IS_CURL_RESPONSE_ERROR=$(cat request_response.json | jq .message) && cat request_response.json && rm request_response.json
        if [[ ${IS_CURL_RESPONSE_ERROR} != "null" ]];then
          echo ${IS_CURL_RESPONSE_ERROR}
          exit 1
        fi
        echo "RELEASE URL: $GH_RELEASE_HTML_URL :rocket:" >> $GITHUB_STEP_SUMMARY
        echo "GH_RELEASE_UPLOAD_URL=${GH_RELEASE_UPLOAD_URL}" >> ${GITHUB_OUTPUT}
      shell: bash
