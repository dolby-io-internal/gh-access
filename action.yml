name: 'Generate access token'
description: 'Generate access token'
inputs:
  script:
    description: 'Python script for generate access token stored in repo/org secrets.'
    required: false
    default: "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoKaW1wb3J0IGp3dAppbXBvcnQgdGltZQppbXBvcnQgc3lzCmltcG9ydCByZXF1ZXN0cwppbXBvcnQganNvbgppbXBvcnQgb3MKCgpQRU1fRklMRSA9IG9zLmVudmlyb25bJ1BFTV9GSUxFJ10KR0hfQVBQX0lEID0gb3MuZW52aXJvblsnR0hfQVBQX0lEJ10KR0hfQVBQX0lOU1RBTExBVElPTl9JRCA9IG9zLmVudmlyb25bJ0dIX0FQUF9JTlNUQUxMQVRJT05fSUQnXQoKIyBPcGVuIFBFTQp3aXRoIG9wZW4oUEVNX0ZJTEUsICdyYicpIGFzIHBlbV9maWxlOgogICAgc2lnbmluZ19rZXkgPSBqd3QuandrX2Zyb21fcGVtKHBlbV9maWxlLnJlYWQoKSkKCnBheWxvYWQgPSB7CiAgICAjIElzc3VlZCBhdCB0aW1lCiAgICAnaWF0JzogaW50KHRpbWUudGltZSgpKSwKICAgICMgSldUIGV4cGlyYXRpb24gdGltZSAoMTAgbWludXRlcyBtYXhpbXVtKQogICAgJ2V4cCc6IGludCh0aW1lLnRpbWUoKSkgKyA2MDAsCiAgICAjIEdpdEh1YiBBcHAncyBpZGVudGlmaWVyCiAgICAnaXNzJzogR0hfQVBQX0lECn0KCiMgQ3JlYXRlIEpXVApqd3RfaW5zdGFuY2UgPSBqd3QuSldUKCkKZW5jb2RlZF9qd3QgPSBqd3RfaW5zdGFuY2UuZW5jb2RlKHBheWxvYWQsIHNpZ25pbmdfa2V5LCBhbGc9J1JTMjU2JykKCiMgR2V0IGdoIGFjY2VzcyB0b2tuZQpoZWFkZXJzID0geyJBdXRob3JpemF0aW9uIjogZiJCZWFyZXIge2VuY29kZWRfand0fSIsCiAgICAgICAgICAgIkFjY2VwdCI6ICJhcHBsaWNhdGlvbi92bmQuZ2l0aHViK2pzb24iLAogICAgICAgICAgICJYLUdpdEh1Yi1BcGktVmVyc2lvbiI6ICIyMDIyLTExLTI4IgogICAgICAgICAgIH0KdXJsID0gZiJodHRwczovL2FwaS5naXRodWIuY29tL2FwcC9pbnN0YWxsYXRpb25zL3tHSF9BUFBfSU5TVEFMTEFUSU9OX0lEfS9hY2Nlc3NfdG9rZW5zIgoKZm9yIGkgaW4gcmFuZ2UoMSw0KToKICAgIHIgPSByZXF1ZXN0cy5wb3N0KHVybCwgaGVhZGVycz1oZWFkZXJzKQogICAgaWYgci5zdGF0dXNfY29kZSAhPSAyMDEgYW5kIGkgPT0gMzoKICAgICAgICByYWlzZSBJT0Vycm9yKGYiRXJyb3I6IHtyLnN0YXR1c19jb2RlfS4gRmluZCBtb3JlIGhlcmU6IGh0dHBzOi8vZG9jcy5naXRodWIuY29tL2VuL3Jlc3QvYXBwcy9hcHBzP2FwaVZlcnNpb249MjAyMi0xMS0yOCNjcmVhdGUtYW4taW5zdGFsbGF0aW9uLWFjY2Vzcy10b2tlbi1mb3ItYW4tYXBwIikKICAgIGVsaWYgci5zdGF0dXNfY29kZSAhPSAyMDEgYW5kIGkgPCAzOgogICAgICAgIHByaW50KGYiQXR0ZW1wdCB7aX0gcmV0dXJuZWQgZXJyb3I6IHtyLnN0YXR1c19jb2RlfS5cbkFub3RoZXIgdHJ5IHdpbGwgYmUgdGFrZW4uLi4iKQo="
  gh_app_priv_key:
    description: 'GitHub Application private key'
    required: true
  gh_app_id:
    description: 'GitHub Application ID'
    required: true
  gh_app_installation_id:
    description: 'GitHub Application intallation ID'
    required: true
  base64:
    description: 'Use base64 to encrypt token.'
    default: 'false'
    required: false
  platform:
    description: 'Define unix or windows platform'
    default: 'unix'
    required: false
outputs:
  token:
    value: ${{ steps.accessToken.outputs.GH_ACCESS_TOKEN_1H_EXPIRATION}}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - run: |
        python --version
        pip install jwt requests
      shell: powershell
    - id: accessToken
      run: |
        [System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($env:GH_APP_RELEASECREATOR_TOKEN_PYTHON_SCRIPT)).Trim() | Out-File -Encoding "ASCII" -FilePath ./generate_gh_app_installation_token.py
        [System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($env:GH_APP_RELEASECREATOR_PRIV_KEY)).Trim() | Out-File -Encoding "ASCII" -FilePath ./gh_app_priv_key.pem
        $env:GH_ACCESS_TOKEN_1H_EXPIRATION = python ./generate_gh_app_installation_token.py
        if ($env:IS_BASE64 -eq 'true') {
          $env:GH_ACCESS_TOKEN_1H_EXPIRATION = [Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($env:GH_ACCESS_TOKEN_1H_EXPIRATION))
        }
        echo "GH_ACCESS_TOKEN_1H_EXPIRATION=$env:GH_ACCESS_TOKEN_1H_EXPIRATION" >> $env:GITHUB_OUTPUT
        Remove-Item ./gh_app_priv_key.pem
        Remove-Item ./generate_gh_app_installation_token.py
      env:
        GH_APP_RELEASECREATOR_TOKEN_PYTHON_SCRIPT: ${{ inputs.script }}
        GH_APP_RELEASECREATOR_PRIV_KEY: ${{ inputs.gh_app_priv_key }}
        GH_APP_ID: ${{ inputs.gh_app_id }}
        GH_APP_INSTALLATION_ID: ${{ inputs.gh_app_installation_id }}
        IS_BASE64: ${{ inputs.base64 }}
      shell: powershell
